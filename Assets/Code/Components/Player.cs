// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ViveDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS;
    using uFrame.ECS.Components;
    using uFrame.Json;
    using UniRx;
    using UnityEngine;
    
    
    [uFrame.Attributes.ComponentId(6)]
    [uFrame.Attributes.uFrameIdentifier("8d90ad11-fd0b-42e0-bba8-582cabb45d14")]
    public partial class Player : uFrame.ECS.Components.EcsComponent {
        
        [UnityEngine.SerializeField()]
        private Int32 _jumpForce;
        
        [UnityEngine.SerializeField()]
        private Double _moveSpeed;
        
        private Subject<PropertyChangedEvent<Int32>> _jumpForceObservable;
        
        private PropertyChangedEvent<Int32> _jumpForceEvent;
        
        private Subject<PropertyChangedEvent<Double>> _moveSpeedObservable;
        
        private PropertyChangedEvent<Double> _moveSpeedEvent;
        
        public override int ComponentId {
            get {
                return 6;
            }
        }
        
        public IObservable<PropertyChangedEvent<Int32>> jumpForceObservable {
            get {
                return _jumpForceObservable ?? (_jumpForceObservable = new Subject<PropertyChangedEvent<Int32>>());
            }
        }
        
        public IObservable<PropertyChangedEvent<Double>> moveSpeedObservable {
            get {
                return _moveSpeedObservable ?? (_moveSpeedObservable = new Subject<PropertyChangedEvent<Double>>());
            }
        }
        
        public Int32 jumpForce {
            get {
                return _jumpForce;
            }
            set {
                SetjumpForce(value);
            }
        }
        
        public Double moveSpeed {
            get {
                return _moveSpeed;
            }
            set {
                SetmoveSpeed(value);
            }
        }
        
        public virtual void SetjumpForce(Int32 value) {
            SetProperty(ref _jumpForce, value, ref _jumpForceEvent, _jumpForceObservable);
        }
        
        public virtual void SetmoveSpeed(Double value) {
            SetProperty(ref _moveSpeed, value, ref _moveSpeedEvent, _moveSpeedObservable);
        }
    }
}
