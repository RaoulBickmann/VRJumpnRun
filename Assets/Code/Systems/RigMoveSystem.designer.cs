// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ViveDB {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.ECS.APIs;
    using uFrame.ECS.Components;
    using uFrame.ECS.Systems;
    using uFrame.Kernel;
    using UniRx;
    using UnityEngine;
    using ViveDB;
    
    
    public partial class RigMoveSystemBase : uFrame.ECS.Systems.EcsSystem {
        
        private IEcsComponentManagerOf<WandManager> _WandManagerManager;
        
        private IEcsComponentManagerOf<Player> _PlayerManager;
        
        private IEcsComponentManagerOf<Grabable> _GrabableManager;
        
        private IEcsComponentManagerOf<WandRight> _WandRightManager;
        
        private IEcsComponentManagerOf<Turret> _TurretManager;
        
        private IEcsComponentManagerOf<Checkpoint> _CheckpointManager;
        
        private IEcsComponentManagerOf<Menu> _MenuManager;
        
        private IEcsComponentManagerOf<Bullet> _BulletManager;
        
        private IEcsComponentManagerOf<WandLeft> _WandLeftManager;
        
        private IEcsComponentManagerOf<Rig> _RigManager;
        
        private IEcsComponentManagerOf<Feet> _FeetManager;
        
        public IEcsComponentManagerOf<WandManager> WandManagerManager {
            get {
                return _WandManagerManager;
            }
            set {
                _WandManagerManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Player> PlayerManager {
            get {
                return _PlayerManager;
            }
            set {
                _PlayerManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Grabable> GrabableManager {
            get {
                return _GrabableManager;
            }
            set {
                _GrabableManager = value;
            }
        }
        
        public IEcsComponentManagerOf<WandRight> WandRightManager {
            get {
                return _WandRightManager;
            }
            set {
                _WandRightManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Turret> TurretManager {
            get {
                return _TurretManager;
            }
            set {
                _TurretManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Checkpoint> CheckpointManager {
            get {
                return _CheckpointManager;
            }
            set {
                _CheckpointManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Menu> MenuManager {
            get {
                return _MenuManager;
            }
            set {
                _MenuManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Bullet> BulletManager {
            get {
                return _BulletManager;
            }
            set {
                _BulletManager = value;
            }
        }
        
        public IEcsComponentManagerOf<WandLeft> WandLeftManager {
            get {
                return _WandLeftManager;
            }
            set {
                _WandLeftManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Rig> RigManager {
            get {
                return _RigManager;
            }
            set {
                _RigManager = value;
            }
        }
        
        public IEcsComponentManagerOf<Feet> FeetManager {
            get {
                return _FeetManager;
            }
            set {
                _FeetManager = value;
            }
        }
        
        public override void Setup() {
            base.Setup();
            WandManagerManager = ComponentSystem.RegisterComponent<WandManager>(5);
            PlayerManager = ComponentSystem.RegisterComponent<Player>(6);
            GrabableManager = ComponentSystem.RegisterComponent<Grabable>(7);
            WandRightManager = ComponentSystem.RegisterComponent<WandRight>(1);
            TurretManager = ComponentSystem.RegisterComponent<Turret>(10);
            CheckpointManager = ComponentSystem.RegisterComponent<Checkpoint>(12);
            MenuManager = ComponentSystem.RegisterComponent<Menu>(13);
            BulletManager = ComponentSystem.RegisterComponent<Bullet>(11);
            WandLeftManager = ComponentSystem.RegisterComponent<WandLeft>(3);
            RigManager = ComponentSystem.RegisterComponent<Rig>(9);
            FeetManager = ComponentSystem.RegisterComponent<Feet>(14);
            this.OnEvent<ViveDB.RigMoveEvent>().Subscribe(_=>{ RigMoveSystemRigMoveEventFilter(_); }).DisposeWith(this);
        }
        
        protected virtual void RigMoveSystemRigMoveEventHandler(ViveDB.RigMoveEvent data, Rig group) {
        }
        
        protected void RigMoveSystemRigMoveEventFilter(ViveDB.RigMoveEvent data) {
            var RigItems = RigManager.Components;
            for (var RigIndex = 0
            ; RigIndex < RigItems.Count; RigIndex++
            ) {
                if (!RigItems[RigIndex].Enabled) {
                    continue;
                }
                this.RigMoveSystemRigMoveEventHandler(data, RigItems[RigIndex]);
            }
        }
    }
    
    [uFrame.Attributes.uFrameIdentifier("34f3c15a-b548-4ee1-8a0d-2595341c0c9a")]
    public partial class RigMoveSystem : RigMoveSystemBase {
        
        private static RigMoveSystem _Instance;
        
        public RigMoveSystem() {
            Instance = this;
        }
        
        public static RigMoveSystem Instance {
            get {
                return _Instance;
            }
            set {
                _Instance = value;
            }
        }
    }
}
